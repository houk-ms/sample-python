// The templates are generated by bicep IaC generator
targetScope = 'subscription'

param location string = 'eastus'
param resourceGroupName string = 'rg-myenv'
param resourceToken string = toLower(uniqueString(subscription().id, location, resourceGroupName))
param containerAppSamplepythonName string = 'samplepython${resourceToken}'
param containerAppEnvName string = 'env${resourceToken}'
param containerRegistryName string = 'acr${resourceToken}'


// Deploy an Azure Resource Group

resource resourceGroup 'Microsoft.Resources/resourceGroups@2021-04-01' = {
	name: resourceGroupName
	location: location
}

// Deploy an Azure Container App environment

module containerAppEnv 'containerappenv.bicep' = {
	name: 'container-app-env-deployment'
	scope: resourceGroup
	params: {
		location: location
		name: containerAppEnvName
	}
}
var containerAppEnvId = containerAppEnv.outputs.id

// Deploy an Azure Container Registry

module containerRegistry 'containerregistry.bicep' = {
	name: 'container-registry-deployment'
	scope: resourceGroup
	params: {
		location: location
		name: containerRegistryName
	}
}

// Deploy an Azure Container App

module containerAppSamplepythonDeployment 'containerapp.bicep' = {
	name: 'container-app-samplepython-deployment'
	scope: resourceGroup
	params: {
		location: location
		name: containerAppSamplepythonName 
		containerAppEnvId: containerAppEnvId
		containerRegistryName: containerRegistryName 
		containerEnv: [
			{
				name: 'PORT'
				value: '80'
			}
		] 
		tags: {'azd-service-name': 'samplepython'}
	}
	dependsOn: [
		containerAppEnv
		containerRegistry
	]
}



output containerAppSamplepythonId string = containerAppSamplepythonDeployment.outputs.id
output containerRegistrySamplepythonId string = containerRegistry.outputs.id
output AZURE_CONTAINER_REGISTRY_ENDPOINT string = containerRegistry.outputs.loginServer